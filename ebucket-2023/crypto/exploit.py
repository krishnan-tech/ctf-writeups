from Crypto.Util.number import inverse, long_to_bytes

# Values of printed variables
m = 34119850176465181010121756237887696542579489082342119067680585107269241473825
n = 105180333281697511741809724959635805958208653741786544006878018004243067345869
p = int(''.join(['111100100111010110110000011100010000000000000110100000000111111000011110101010000111110000001111110101010011']), 2)  # Binary string printed one bit at a time
print(m)
print(n)
print(p)
q = n // p
e = 65537

# Compute private key
l = (p-1)*(q-1)
d = inverse(e, l)

# Decrypt ciphertext and print plaintext
c = m
plaintext = long_to_bytes(pow(c, d, n))
print(plaintext)

